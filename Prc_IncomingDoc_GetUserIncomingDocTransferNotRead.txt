USE [DHTN-2025]
GO
/****** Object:  StoredProcedure [edoc].[Prc_IncomingDoc_GetUserIncomingDocTransferNotRead]    Script Date: 9/21/2025 2:46:31 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Tran Duc Binh
-- Create date:	13/09/2025
-- Description:	Get UserIncomingDoc
-- =============================================
ALTER PROCEDURE [edoc].[Prc_IncomingDoc_GetUserIncomingDocTransferNotRead]
    -- Add the parameters for the stored procedure here
    @IncomingDocId BIGINT
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        
    ;WITH CTE_IncomingDocs AS
    (
        SELECT Id
        FROM edoc.IncomingDoc
        WHERE ParentId = @IncomingDocId
    )
    SELECT
        u.Id
        ,u.IncomingDocId
        ,u.UserSend
        ,u.UserSendName
        ,u.UserSendRoleId
        ,u.UserReceive
        ,u.UserReceiveName
        ,u.UserReceiveRoleId
        ,u.ReceiveRoleId
        ,r.Name as ReceiveRoleName
        ,u.ReceiveRoleUnitName
        ,u.SendDate
        ,u.ReadDate
        ,u.ExpiredDate
        ,u.CompleteDate
        ,u.Status
        ,u.SendType
        ,u.ProsessRoleId
        ,u.UserSendStatus
        ,u.UserReceiveStatus
        ,u.Note
        ,u.ProsessNote
    FROM edoc.UserIncomingDoc u WITH (NOLOCK)
    LEFT JOIN dbo.Role r on u.ReceiveRoleId = r.Id
    WHERE 
        u.IncomingDocId IN (SELECT Id FROM CTE_IncomingDocs) AND u.Status = 1
    ORDER BY u.Id;

    END TRY
    BEGIN CATCH
        DECLARE @ErrorMessage NVARCHAR(MAX),
                @ErrorNumber INT,
                @ErrorSeverity INT,
                @ErrorState INT,
                @ErrorLine INT,
                @ErrorProcedure NVARCHAR(200);

        -- Assign variables to error-handling functions that capture information for RAISERROR.
        SELECT @ErrorNumber = ERROR_NUMBER(),
               @ErrorSeverity = ERROR_SEVERITY(),
               @ErrorState = ERROR_STATE(),
               @ErrorLine = ERROR_LINE(),
               @ErrorProcedure = ISNULL(ERROR_PROCEDURE(), '-');

        -- Build the message string that will contain original error information.
        SELECT @ErrorMessage = N'Error %d, Level %d, State %d, Procedure %s, Line %d, Message: ' + ERROR_MESSAGE();

        -- Only set the error state if its been set to zero
        IF (@ErrorState = 0)
            SET @ErrorState = 1;

        -- Raise an error: msg_str parameter of RAISERROR will contain the original error information.
        RAISERROR(   @ErrorMessage,
                     @ErrorSeverity,
                     @ErrorState,
                     @ErrorNumber,    -- parameter: original error number.
                     @ErrorSeverity,  -- parameter: original error severity.
                     @ErrorState,     -- parameter: original error state.
                     @ErrorProcedure, -- parameter: original error procedure name.
                     @ErrorLine       -- parameter: original error line number.
                 );
    END CATCH;
END;
